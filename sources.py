# pip install duckdb

import duckdb

template = """
logical-source {table} {{
	type rdb
	source "{table}"

	referenceables
		{columns}
}}
"""

def replaceSpecialChars(s):
	return s.replace(" ", "_").replace("-", "_").replace(",", "_").replace(";", "_")

def formatColumnName(col):
	name = col[0]
	replaced = replaceSpecialChars(name)
	return name if (replaced == name) else f'{replaced} "{name}"'

con = duckdb.connect("xrm-csv-workflow.duckdb")

with open("mappings/Sources.xrm", "w") as f:
	f.write("// generated by sources.py\n")
	for table in con.sql("SELECT table_name FROM information_schema.tables").fetchall():
		cols = con.sql("SELECT column_name FROM information_schema.columns WHERE table_name='{}'".format(table[0]))
		logicalSource = template.format(
			table=table[0],
			columns="\n\t\t".join(map(formatColumnName, cols.fetchall()))
		)
		f.write(logicalSource)